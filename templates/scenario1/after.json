{
  "Resources": {
    "TableCD117FA1": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "name",
            "KeyType": "RANGE"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          },
          {
            "AttributeName": "name",
            "AttributeType": "S"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/Table/Resource"
      }
    },
    "VPCB9E5F0B4": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkDemoProjectStack/VPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/VPC/Resource"
      }
    },
    "VPCPublicSubnet1SubnetB4246D30": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/18",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "CdkDemoProjectStack/VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/VPC/PublicSubnet1/Subnet"
      }
    },
    "VPCPublicSubnet1RouteTableFEE4B781": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkDemoProjectStack/VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/VPC/PublicSubnet1/RouteTable"
      }
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet1SubnetB4246D30"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/VPC/PublicSubnet1/RouteTableAssociation"
      }
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "DependsOn": [
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/VPC/PublicSubnet1/DefaultRoute"
      }
    },
    "VPCPublicSubnet1EIP6AD938E8": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkDemoProjectStack/VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/VPC/PublicSubnet1/EIP"
      }
    },
    "VPCPublicSubnet1NATGatewayE0556630": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet1SubnetB4246D30"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkDemoProjectStack/VPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/VPC/PublicSubnet1/NATGateway"
      }
    },
    "VPCPublicSubnet2Subnet74179F39": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/18",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "CdkDemoProjectStack/VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/VPC/PublicSubnet2/Subnet"
      }
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkDemoProjectStack/VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/VPC/PublicSubnet2/RouteTable"
      }
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet2Subnet74179F39"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/VPC/PublicSubnet2/RouteTableAssociation"
      }
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "DependsOn": [
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/VPC/PublicSubnet2/DefaultRoute"
      }
    },
    "VPCPublicSubnet2EIP4947BC00": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkDemoProjectStack/VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/VPC/PublicSubnet2/EIP"
      }
    },
    "VPCPublicSubnet2NATGateway3C070193": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VPCPublicSubnet2EIP4947BC00",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "VPCPublicSubnet2Subnet74179F39"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkDemoProjectStack/VPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/VPC/PublicSubnet2/NATGateway"
      }
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/18",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "CdkDemoProjectStack/VPC/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/VPC/PrivateSubnet1/Subnet"
      }
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkDemoProjectStack/VPC/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/VPC/PrivateSubnet1/RouteTable"
      }
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
        },
        "SubnetId": {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/VPC/PrivateSubnet1/RouteTableAssociation"
      }
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/VPC/PrivateSubnet1/DefaultRoute"
      }
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.192.0/18",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "CdkDemoProjectStack/VPC/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/VPC/PrivateSubnet2/Subnet"
      }
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkDemoProjectStack/VPC/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/VPC/PrivateSubnet2/RouteTable"
      }
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
        },
        "SubnetId": {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/VPC/PrivateSubnet2/RouteTableAssociation"
      }
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VPCPublicSubnet2NATGateway3C070193"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/VPC/PrivateSubnet2/DefaultRoute"
      }
    },
    "VPCIGWB7E252D3": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkDemoProjectStack/VPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/VPC/IGW"
      }
    },
    "VPCVPCGW99B986DC": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "InternetGatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/VPC/VPCGW"
      }
    },
    "VPCDynamoDbEndpoint800BFC36": {
      "Type": "AWS::EC2::VPCEndpoint",
      "Properties": {
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region"
              },
              ".dynamodb"
            ]
          ]
        },
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:DeleteItem",
                "dynamodb:GetItem",
                "dynamodb:UpdateItem"
              ],
              "Effect": "Allow",
              "Principal": "*",
              "Resource": {
                "Fn::GetAtt": [
                  "TableCD117FA1",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "dynamodb:DescribeTable",
                "dynamodb:ListTables"
              ],
              "Effect": "Allow",
              "Principal": "*",
              "Resource": {
                "Fn::GetAtt": [
                  "TableCD117FA1",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "RouteTableIds": [
          {
            "Ref": "VPCPrivateSubnet1RouteTableBE8A6027"
          },
          {
            "Ref": "VPCPrivateSubnet2RouteTable0A19E10E"
          },
          {
            "Ref": "VPCPublicSubnet1RouteTableFEE4B781"
          },
          {
            "Ref": "VPCPublicSubnet2RouteTable6F1A15F1"
          }
        ],
        "VpcEndpointType": "Gateway"
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/VPC/DynamoDbEndpoint/Resource"
      }
    },
    "ScalableEC2LBEB28DAE8": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false"
          }
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "ScalableEC2LBSecurityGroup5AABB68F",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          {
            "Ref": "VPCPublicSubnet1SubnetB4246D30"
          },
          {
            "Ref": "VPCPublicSubnet2Subnet74179F39"
          }
        ],
        "Type": "application"
      },
      "DependsOn": [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet2DefaultRouteB7481BBA"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/ScalableEC2/LB/Resource"
      }
    },
    "ScalableEC2LBSecurityGroup5AABB68F": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB CdkDemoProjectStackScalableEC2LBD35A1EDE",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/ScalableEC2/LB/SecurityGroup/Resource"
      }
    },
    "ScalableEC2LBSecurityGrouptoCdkDemoProjectStackScalableEC2ASGInstanceSecurityGroupEE3B4CE28033849C1F": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "ScalableEC2LBSecurityGroup5AABB68F",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "ScalableEC2ASGInstanceSecurityGroup7CA93872",
            "GroupId"
          ]
        },
        "FromPort": 80,
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/ScalableEC2/LB/SecurityGroup/to CdkDemoProjectStackScalableEC2ASGInstanceSecurityGroupEE3B4CE2:80"
      }
    },
    "ScalableEC2LBListener151E19B5": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "ScalableEC2LBListenerTargetGroup82823183"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "ScalableEC2LBEB28DAE8"
        },
        "Port": 80,
        "Protocol": "HTTP"
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/ScalableEC2/LB/Listener/Resource"
      }
    },
    "ScalableEC2LBListenerTargetGroup82823183": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Port": 80,
        "Protocol": "HTTP",
        "TargetType": "instance",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/ScalableEC2/LB/Listener/TargetGroup/Resource"
      }
    },
    "ScalableEC2ASGInstanceSecurityGroup7CA93872": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "CdkDemoProjectStack/ScalableEC2/ASG/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkDemoProjectStack/ScalableEC2/ASG"
          }
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/ScalableEC2/ASG/InstanceSecurityGroup/Resource"
      }
    },
    "ScalableEC2ASGInstanceSecurityGroupfromCdkDemoProjectStackScalableEC2LBSecurityGroup7CD7BA0A809509746C": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "ScalableEC2ASGInstanceSecurityGroup7CA93872",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "ScalableEC2LBSecurityGroup5AABB68F",
            "GroupId"
          ]
        },
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/ScalableEC2/ASG/InstanceSecurityGroup/from CdkDemoProjectStackScalableEC2LBSecurityGroup7CD7BA0A:80"
      }
    },
    "ScalableEC2ASGInstanceRole75BFFE79": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "ec2.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "CdkDemoProjectStack/ScalableEC2/ASG"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/ScalableEC2/ASG/InstanceRole/Resource"
      }
    },
    "ScalableEC2ASGInstanceProfileC06AF9E6": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "ScalableEC2ASGInstanceRole75BFFE79"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/ScalableEC2/ASG/InstanceProfile"
      }
    },
    "ScalableEC2ASGLaunchConfig0A6F7172": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t3.micro",
        "IamInstanceProfile": {
          "Ref": "ScalableEC2ASGInstanceProfileC06AF9E6"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "ScalableEC2ASGInstanceSecurityGroup7CA93872",
              "GroupId"
            ]
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash"
        }
      },
      "DependsOn": [
        "ScalableEC2ASGInstanceRole75BFFE79"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/ScalableEC2/ASG/LaunchConfig"
      }
    },
    "ScalableEC2ASG0BE2681E": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "MaxSize": "1",
        "MinSize": "1",
        "LaunchConfigurationName": {
          "Ref": "ScalableEC2ASGLaunchConfig0A6F7172"
        },
        "Tags": [
          {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "CdkDemoProjectStack/ScalableEC2/ASG"
          }
        ],
        "TargetGroupARNs": [
          {
            "Ref": "ScalableEC2LBListenerTargetGroup82823183"
          }
        ],
        "VPCZoneIdentifier": [
          {
            "Ref": "VPCPrivateSubnet1Subnet8BCA10E0"
          },
          {
            "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A"
          }
        ]
      },
      "UpdatePolicy": {
        "AutoScalingScheduledAction": {
          "IgnoreUnmodifiedGroupSizeProperties": true
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/ScalableEC2/ASG/ASG"
      }
    },
    "ScalableEC2ASGScalingPolicyAModestLoadC36384C8": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AutoScalingGroupName": {
          "Ref": "ScalableEC2ASG0BE2681E"
        },
        "PolicyType": "TargetTrackingScaling",
        "TargetTrackingConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ALBRequestCountPerTarget",
            "ResourceLabel": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "ScalableEC2LBListener151E19B5"
                          }
                        ]
                      }
                    ]
                  },
                  "/",
                  {
                    "Fn::Select": [
                      2,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "ScalableEC2LBListener151E19B5"
                          }
                        ]
                      }
                    ]
                  },
                  "/",
                  {
                    "Fn::Select": [
                      3,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "ScalableEC2LBListener151E19B5"
                          }
                        ]
                      }
                    ]
                  },
                  "/",
                  {
                    "Fn::GetAtt": [
                      "ScalableEC2LBListenerTargetGroup82823183",
                      "TargetGroupFullName"
                    ]
                  }
                ]
              ]
            }
          },
          "TargetValue": 30
        }
      },
      "DependsOn": [
        "ScalableEC2LBListener151E19B5",
        "ScalableEC2LBListenerTargetGroup82823183"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/ScalableEC2/ASG/ScalingPolicyAModestLoad/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAAE31S22rCQBD9lr6vay0ttG+1IhKQEhLxfbLZxNVkNuxFkZB/7+Riogh92jlnzs59wb8++evLN1zsTKSneS20kbyOHYgTi6TV3gjJVhqtM144tsowBAOldNK0YJJkSKpUOaWxYW24Or0ilDpNeL2DpOgkndEwKd54va9ES+3DFQt9UigR+wRll2KyIu2dHL/3/MQtrdVCQZtzFLfGOgjb5xfcBpy8wJWFRp3JnAIHSB2QfRP0lQxo6aj/QynRsYGhYteYVlqhG6QjjKXwRrnrxmhfdVX+S6xzI619ogPseJpNAdYpUWhIEygAhcL8TONaVhXNqOt1S76fztcv4QHf65R1EgfNzb7z78DkNIFbmXeQNuidtgIKyk65CcQ9GNVb8CgOtPNM5d6MO3iS9lF3hg6KuMEVaqqhG/oD0TAFJa8j3a/79gZ0fW1zodGZovtpGoY6lfxo5+fFB1+80wUfrVIz49GpUvKof/8AJUWepd0CAAA="
      },
      "Metadata": {
        "aws:cdk:path": "CdkDemoProjectStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Parameters": {
    "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2"
    },
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store."
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  }
}